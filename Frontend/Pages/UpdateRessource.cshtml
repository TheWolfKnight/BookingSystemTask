@page
@model Frontend.Pages.UpdateRessourceModel
@{
	ViewData["Title"] = "Update resource";
}
<a asp-page="./index">Tilbage</a>


<div id="input-fields">
	<input id="id-input" type="number" placeholder="Id" />
	<input id="desc-input" type="text" placeholder="Description"/>
	<input id="type-input" type="number" placeholder="Type"/>
	<input id="price-input" type="text" placeholder="price"/>
</div>

<button id="submit-ressource" type="submit">Opdater Ressource</button>

<script async action="javascript/js">
	function get_values() {
		const description = document.getElementById('desc-input');
		const specification = document.getElementById('type-input');
		const price = parseFloat(document.getElementById('price-input'));

		if (description.lenght < 1) {
			throw "no";
		}

		if (isNaN(specification) || specification.length < 1) {
			throw "no";
		}

		if (isNaN(price) || price.length < 1) {
			throw "no";
		}

		const requestData = {
			description: description,
			specification: specification,
			price: price
		};

		return requestData;
	}


	async function sendRequest() {
		const id = parseInt(document.getElementById('id-input').value);

		let requestData = null;

		requestData = get_values();

		console.write(requestData);

		const BASE_ADDR = "http://localhost:5000";
		const response = await fetch(`${BASE_ADDR}/UpdateRessouce/${id}`, {
			method: 'PUT',
			mode: 'cors',
			headers: {
				'Content-Type': 'application/json'
			},
			body: JSON.stringify(requestData)
		});

		if (response.ok) {
			const data = await response.json();
			alert("Resource updated successfully!");
			console.log('Resource updated successfully:', data);
			return;
		} else {
			alert("Kunne ikke sende til serveren");
			console.error('Error:', response.statusText);
			return;
		}
	}
    
	document.getElementById("submit-ressource").addEventListener("click", async (mev) => {
		const LEFT_MOUSE_BUTTON = 0;
		if (mev.buttons !== LEFT_MOUSE_BUTTON) return;

		await sendRequest();
	});
</script>